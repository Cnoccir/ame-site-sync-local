-- Baseline init schema for local dev (prototype)
create extension if not exists pgcrypto;

-- Technicians / employees
create table if not exists public.ame_employees (
  id uuid primary key default gen_random_uuid(),
  technician_id text,
  user_id uuid,
  first_name text,
  last_name text,
  employee_id text,
  email text,
  phone text,
  mobile_phone text,
  role text,
  department text,
  employment_status text,
  is_active boolean default true,
  is_technician boolean default false,
  extension text,
  direct_line text,
  created_at timestamptz default now(),
  updated_at timestamptz default now(),
  employee_name text
);

-- Customers (superset of fields used by app services)
create table if not exists public.ame_customers (
  id uuid primary key default gen_random_uuid(),
  customer_id text,
  company_name text not null,
  site_name text,
  site_address text,
  service_tier text default 'CORE',
  system_type text,
  contract_status text,
  building_type text,
  primary_contact text,
  contact_phone text,
  contact_email text,
  emergency_contact text,
  emergency_phone text,
  emergency_email text,
  security_contact text,
  security_phone text,
  building_access_type text,
  building_access_details text,
  access_hours text,
  ppe_required jsonb default '[]',
  badge_required boolean,
  training_required boolean,
  safety_requirements text,
  site_hazards jsonb default '[]',
  bms_supervisor_ip text,
  web_supervisor_url text,
  workbench_username text,
  workbench_password text,
  platform_username text,
  platform_password text,
  remote_access boolean,
  remote_access_type text,
  vpn_required boolean,
  vpn_details text,
  last_service timestamptz,
  next_due timestamptz,
  technician_assigned text,
  drive_folder_id text,
  drive_folder_url text,
  created_at timestamptz default now(),
  updated_at timestamptz default now(),
  created_by uuid,
  updated_by uuid,
  region text,
  district text,
  territory text,
  account_manager text,
  technical_contact text,
  technical_phone text,
  technical_email text,
  billing_contact text,
  billing_phone text,
  billing_email text,
  contract_start_date date,
  contract_end_date date,
  service_frequency text,
  equipment_list text,
  special_instructions text,
  site_timezone text,
  coordinates text,
  annual_contract_value numeric,
  payment_terms text,
  escalation_contact text,
  escalation_phone text,
  site_nickname text,
  system_architecture text,
  primary_bas_platform text,
  primary_contact_role text,
  access_procedure text,
  parking_instructions text,
  equipment_access_notes text,
  safety_notes text,
  other_hazards_notes text,
  secondary_contact_name text,
  secondary_contact_phone text,
  secondary_contact_email text,
  secondary_contact_role text,
  primary_technician_id text,
  secondary_technician_id text,
  account_manager_id text,
  pc_username text,
  pc_password text,
  primary_technician_name text,
  primary_technician_phone text,
  primary_technician_email text,
  secondary_technician_name text,
  secondary_technician_phone text,
  secondary_technician_email text,
  account_manager_name text,
  account_manager_phone text,
  account_manager_email text,
  service_address text,
  different_platform_station_creds boolean,
  equipment_locations text,
  equipment_specific_procedures text,
  mailing_address text,
  mailing_city text,
  mailing_state text,
  mailing_zip text,
  service_address_different boolean,
  emergency_contact_role text,
  security_contact_name text,
  security_contact_phone text,
  security_contact_email text,
  billing_contact_name text,
  billing_contact_phone text,
  billing_contact_email text,
  billing_contact_role text,
  technical_contact_name text,
  technical_contact_phone text,
  technical_contact_email text,
  technical_contact_role text,
  site_number text,
  last_job_numbers text,
  last_visit_by text,
  last_visit_date date,
  site_experience text,
  handoff_notes text,
  best_arrival_times text,
  poc_name text,
  poc_phone text,
  poc_available_hours text,
  backup_contact text,
  access_approach text,
  common_access_issues text,
  scheduling_notes text,
  completion_status text,
  commissioning_notes text,
  known_issues text,
  documentation_score int,
  original_team_contact text,
  original_team_role text,
  original_team_info text,
  when_to_contact_original text,
  escort_required boolean,
  has_submittals boolean,
  has_floor_plans boolean,
  has_as_built boolean,
  has_sequence boolean,
  has_network_diagram boolean,
  legacy_customer_id int,
  simpro_customer_id int,
  required_ppe jsonb default '[]',
  known_hazards jsonb default '[]',
  safety_contact_name text,
  safety_contact_phone text,
  access_method text,
  best_arrival_time text,
  contract_number text,
  contract_value numeric,
  system_family text,
  bms_platform text
);

-- PM workflow sessions
create table if not exists public.pm_workflow_sessions (
  id uuid primary key default gen_random_uuid(),
  session_name text,
  customer_id uuid,
  technician_id text,
  secondary_technician_id text,
  session_type text,
  service_tier text check (service_tier in ('CORE','ASSURE','GUARDIAN')),
  current_phase int default 1,
  phase_1_data jsonb,
  phase_2_data jsonb,
  phase_3_data jsonb,
  phase_4_data jsonb,
  started_at timestamptz default now(),
  completed_at timestamptz,
  estimated_duration int,
  actual_duration int,
  status text default 'Draft',
  completion_percentage int default 0,
  customer_data jsonb,
  primary_technician_name text,
  secondary_technician_name text,
  report_generated boolean default false,
  report_url text,
  photos_count int,
  issues_count int,
  recommendations_count int,
  created_by uuid,
  updated_by uuid,
  created_at timestamptz default now(),
  updated_at timestamptz default now()
);

-- Task/SOP library
create table if not exists public.task_sop_library (
  id uuid primary key default gen_random_uuid(),
  record_type text not null check (record_type in ('task','sop')),
  task_id text,
  sop_id text,
  title text,
  system_family text,
  vendor_flavor text,
  phase text,
  service_tiers jsonb,
  frequency text,
  estimated_duration_min int,
  audience_level int,
  initial_steps text,
  sop_refs jsonb,
  acceptance_criteria text,
  artifacts text,
  prerequisites text,
  tools_required text,
  safety_tags text,
  reference_links text,
  notes text,
  owner text,
  last_updated timestamptz,
  version text,
  goal text,
  ui_navigation text,
  step_list_core text,
  step_list_assure text,
  step_list_guardian text,
  verification_steps text,
  rollback_steps text,
  best_practices text,
  is_active boolean default true,
  created_at timestamptz default now()
);

-- Reports
create table if not exists public.pm_reports (
  id uuid primary key default gen_random_uuid(),
  session_id uuid references pm_workflow_sessions(id) on delete cascade,
  customer_id uuid,
  owner_id uuid,
  url text,
  template text,
  generated_at timestamptz default now(),
  stats jsonb
);

-- Audit logs (for ActivityService)
create table if not exists public.ame_audit_logs (
  id uuid primary key default gen_random_uuid(),
  user_id uuid,
  action text,
  entity_type text,
  entity_id text,
  changes jsonb,
  created_at timestamptz default now()
);

-- Optional reference tables
create table if not exists public.simpro_customers (
  id uuid primary key default gen_random_uuid(),
  simpro_customer_id text unique,
  company_name text,
  email text,
  mailing_address text,
  mailing_city text,
  mailing_state text,
  mailing_zip text,
  is_contract_customer boolean,
  has_active_contracts boolean,
  active_contract_count int,
  total_contract_value numeric,
  service_tier text,
  latest_contract_email text
);

create table if not exists public.simpro_customer_contracts (
  id uuid primary key default gen_random_uuid(),
  customer_id uuid references simpro_customers(id) on delete cascade,
  contract_name text,
  contract_number text,
  contract_value numeric,
  contract_status text,
  start_date date,
  end_date date
);

-- RPCs used by the app (minimal viable stubs)
create or replace function public.create_customer_full(customer_data jsonb)
returns setof public.ame_customers
language plpgsql as $$
declare rec public.ame_customers%rowtype;
begin
  insert into public.ame_customers (
    company_name, site_name, service_tier, primary_contact, contact_phone, contact_email, created_at, updated_at
  ) values (
    customer_data->>'company_name',
    coalesce(customer_data->>'site_name', customer_data->>'company_name'),
    coalesce(customer_data->>'service_tier','CORE'),
    customer_data->>'primary_contact',
    customer_data->>'contact_phone',
    customer_data->>'contact_email',
    now(), now()
  ) returning * into rec;
  return next rec;
end;$$;

create or replace function public.save_customer_credentials(
  p_customer_id uuid,
  p_bms_credentials jsonb,
  p_windows_credentials jsonb,
  p_service_credentials jsonb,
  p_access_credentials jsonb
) returns void language plpgsql as $$ begin return; end $$;
